{% from "base/util.j2" import args %}
void glIndexedCall(const packed_call_t *packed, void *ret_v) {
    switch (packed->index) {
        {% for f in functions %}
        #ifndef skip_index_{{ f.name }}
        case {{ f.name }}_INDEX:
            call_{{ f.name }}(packed, ret_v);
            break;
        #endif
        {% endfor %}
        default:
            fprintf(stderr, "warning: glIndexedCall with unknown index %d\n", packed->index);
            break;
    }
}

void glIndexedPrint(const packed_call_t *packed) {
    switch (packed->index) {
        {% for f in functions %}
        case {{ f.name }}_INDEX: {
            {% if f.args %}
            PACKED_{{ f.name }} *unpacked = (PACKED_{{ f.name }} *)packed;
            ARGS_{{ f.name }} *args = (ARGS_{{ f.name }} *)&unpacked->args;
            printf("{{ f.name }}({{ f.args|printf }});\n", {{ args(f) }});
            {% else %}
            printf("{{ f.name }}();\n");
            {% endif %}
            break;
        }
        {% endfor %}
        default:
            fprintf(stderr, "warning: glIndexedPrint with unknown index %d\n", packed->index);
            break;
    }
}
